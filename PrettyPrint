

Print concentric rectangular pattern in a 2d matrix.
Let us show you some examples to clarify what we mean.

Example 1:

Input: A = 4.
Output:

4 4 4 4 4 4 4 
4 3 3 3 3 3 4 
4 3 2 2 2 3 4 
4 3 2 1 2 3 4 
4 3 2 2 2 3 4 
4 3 3 3 3 3 4 
4 4 4 4 4 4 4 

Example 2:

Input: A = 3.
Output:

3 3 3 3 3 
3 2 2 2 3 
3 2 1 2 3 
3 2 2 2 3 
3 3 3 3 3 

The outermost rectangle is formed by A, then the next outermost is formed by A-1 and so on.

You will be given A as an argument to the function you need to implement, and you need to return a 2D array.


********************solution**************************
vector<vector<int> > Solution::prettyPrint(int A) 
{

   int n=2*A-1,k=1,dir=0;
   
   vector<vector<int> > vec(n);

for (int i=0; i<n; i++) 
 {
    for (int j=0; j<n; j++) 
    {
        int min_row = std::min(i, A*2-i-2);
        int min_col = std::min(j, A*2-j-2);
        int min = std::min(min_row, min_col);
        vec[i].push_back(A-min);
    }
 }

  return vec;
}
